{"version":3,"sources":["app/classes/Board.js","app/classes/Brick.js","app/classes/Dot.js","app/classes/GridBoard.js","app/classes/NextBrick.js","app/data/CONSTANT.js","app/data/const.js","app/initialize.js","app/scenes/boot.js","app/scenes/default.js","app/scenes/menu.js"],"names":["Board","scene","options","setDefaultStyles","lineStyle","width","color","alpha","fillStyle","boardData","CONSTANT","gameBoard","BOARD_DATA","draw","brick","i","dotArray","length","dot","y","column","x","row","mark","console","table","OFFSET_COL","CELL_SIZE","OFFSET_ROW","gameData","completedRows","NUM_ROWS","counter","j","NUM_COLS","push","finishedCnt","pop","bringDown","fromRow","clear","toPositionX","toPositionY","rect","Phaser","Geom","Rectangle","fillRectShape","GameObjects","Graphics","Brick","board","shapeIndex","rotationIndex","playedSound","setCoordinate","shape","BRICK_SHAPES","OFFSET_MIDDLE","log","d","clearSet","grid","grids","Dot","getColor","tmpRotateID","tmpGrid","isEmpty","canRotate","sound","play","flag","canMoveLeft","moveLeft","canMoveRight","moveRight","canFall","fall","keyDown","isDown","sPoint","cnt","SCORE_PER_GO_DOWN","add","existing","didHitLeft","didHitRight","didHitBottom","GridBoard","depth","strokeRectShape","NextBrick","OFFSET_NEXT_COL","OFFSET_NEXT_ROW_1","OFFSET_NEXT_ROW_2","SCORE_PER_ROW","name","Object","freeze","colors","aqua","black","gold","white","fonts","hexColors","darkGray","red","window","game","Game","height","type","AUTO","title","url","version","banner","background","loader","path","physics","arcade","gravity","BootScene","DefaultScene","MenuScene","progressBar","progressBgRect","progressRect","load","image","spritesheet","frameWidth","frameHeight","audio","on","onLoadProgress","onLoadComplete","createProgressBar","registry","set","start","main","cameras","CenterOn","Clone","graphics","totalComplete","totalFailed","debug","destroy","progress","CONST","Scene","data","key","events","shutdown","picBg","fallTimer","time","addEvent","delay","callback","callbackScope","loop","gridBoard","brickQueue","brickQueueObj","addBrickIDsToQueue","getBrickIDFromQueue","bgMusic","volume","score","level","destroyed","player","nexShapeIndices","nextSpecialIndices","styleConfig","font","fill","align","data_score","text","data_sPoint","data_time","data_level","data_player","data_destroyed","keyLeft","input","keyboard","addKey","keyRight","keyA","changeUp","keyUP","keyD","changeDown","keySPACE","goDown","once","quit","tmpShapeIndex","Math","floor","random","tmp","shift","tmpObj","updateData","setWithProb","sum","pick","fix","completedRowsCnt","checkToClear","updateScore","createBrick","selectedMenu","picTitle","setOrigin","setPosition","renderer","picBgDim","btnNewGame","sprite","setInteractive","setFrame","setScale","btnHighScore","btnAbout","pointer","keyUp","event","highLightBtn","keyEnter"],"mappings":"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","file":"public/app.js","sourcesContent":["import {CONSTANT} from \"../data/CONSTANT\";\n\nexport class Board extends Phaser.GameObjects.Graphics {\n\n    constructor(scene, options) {\n        super(scene, options);\n        this.setDefaultStyles({\n            lineStyle: {\n                width: 1,\n                color: 0xffffff,\n                alpha: 0.3\n            },\n            fillStyle: {\n                color: 0xcccccc,\n                alpha: 1\n            }\n        });\n        this.boardData = CONSTANT.gameBoard.BOARD_DATA;\n        this.draw();\n    }\n\n    fix(brick) {\n        for (let i = 0; i < brick.dotArray.length; i++) {\n            let dot = brick.dotArray[i];\n            let y = dot.column;\n            let x = dot.row;\n            this.mark(x, y, dot.color);\n        }\n        //this.showData();\n    }\n\n    reset() {\n        this.boardData = CONSTANT.gameBoard.BOARD_DATA;\n    }\n\n    mark(x, y, color) {\n        this.boardData[x][y] = color;\n    }\n\n    showData() {\n        console.table(this.boardData);\n    }\n\n    toPositionX(column) {\n        return (column + CONSTANT.gameBoard.OFFSET_COL) * CONSTANT.gameBoard.CELL_SIZE;\n    }\n\n    toPositionY(row) {\n        return (row + CONSTANT.gameBoard.OFFSET_ROW) * CONSTANT.gameBoard.CELL_SIZE;\n    }\n\n    isEmpty(x, y) {\n        return this.boardData[x][y] === null;\n    }\n\n    checkToClear(gameData) {\n        let completedRows = [];\n        for (let i = CONSTANT.gameBoard.NUM_ROWS - 1; i >= 6; i--) {\n            let counter = 0;\n            for (let j = 0; j < CONSTANT.gameBoard.NUM_COLS; j++) {\n                if (this.boardData[i][j] !== null)\n                    counter++;\n            }\n            if (counter === CONSTANT.gameBoard.NUM_COLS) {\n                completedRows.push(i);\n            }\n        }\n        let finishedCnt = completedRows.length;\n        while (completedRows.length !== 0) {\n            let row = completedRows.pop();\n            for (let j = 0; j < CONSTANT.gameBoard.NUM_COLS; j++) {\n                this.boardData[row][j] = null;\n            }\n            this.bringDown(row);\n        }\n        return finishedCnt;\n    }\n\n    bringDown(fromRow) {\n        for (let i = fromRow; i >= 6; i--) {\n            for (let j = 0; j < CONSTANT.gameBoard.NUM_COLS; j++) {\n                this.boardData[i][j] = this.boardData[i - 1][j];\n            }\n        }\n    }\n\n    draw() {\n        this.clear();\n        for (let row = 0; row < this.boardData.length; row++) {\n            for (let column = 0; column < this.boardData[0].length; column++) {\n                let x = this.toPositionX(column);\n                let y = this.toPositionY(row);\n                let rect = new Phaser.Geom.Rectangle(x, y, CONSTANT.gameBoard.CELL_SIZE, CONSTANT.gameBoard.CELL_SIZE);\n                if (this.boardData[row][column] === null) {\n                    //this.strokeRectShape(rect);\n                } else {\n                    //this.lineStyle(1, 0x000000, 0);\n                    this.fillStyle(this.boardData[row][column]);\n                    this.fillRectShape(rect);\n                }\n            }\n        }\n    }\n}","import {CONSTANT} from \"../data/CONSTANT\";\nimport {Dot} from \"./Dot\";\n\n\nexport class Brick extends Phaser.GameObjects.Graphics {\n\n    constructor(scene, options, board, shapeIndex) {\n        super(scene, options);\n        this.board = board;\n        this.dotArray = [];\n        this.rotationIndex = 0;\n        this.playedSound = false;\n        this.setCoordinate();\n        this.setDefaultStyles({\n            lineStyle: {\n                width: 1,\n                color: 0xffffff,\n                alpha: 0.3\n            },\n            fillStyle: {\n                color: 0xcccccc,\n                alpha: 1\n            }\n        });\n\n        this.shapeIndex = shapeIndex;\n        this.shape = CONSTANT.gameBoard.BRICK_SHAPES[this.shapeIndex];\n\n        // color here\n\n        this.draw();\n    }\n\n    getColor() {\n        switch (this.shapeIndex) {\n            case 0:\n                return 0xCF3616;\n            case 1:\n                return 0xBDC007;\n            case 2:\n                return 0x169907;\n            case 3:\n                return 0x07996F;\n            case 4:\n                return 0x076F99;\n            case 5:\n                return 0x410799;\n            case 6:\n                return 0x99078A;\n        }\n    }\n\n    setCoordinate() {\n        this.row = 0;\n        this.column = CONSTANT.gameBoard.OFFSET_MIDDLE;\n    }\n\n    showData() {\n        console.log(\"row: \" + this.row + \" col: \" + this.column);\n    }\n\n    clearSet() {\n        while (this.dotArray.length !== 0) {\n            let d = this.dotArray.pop();\n            d.clear();\n        }\n    }\n\n    draw() {\n        this.clearSet();\n        this.grid = this.shape.grids[this.rotationIndex];\n        for (let row = 0; row < this.grid.length; row++) {\n            for (let column = 0; column < this.grid[0].length; column++) {\n                if (this.grid[row][column] === \"x\") {\n                    let x = this.row + row;\n                    let y = this.column + column;\n                    this.dotArray.push(new Dot(this.scene, {}, x, y, this.board, this.getColor()));\n                }\n            }\n        }\n    }\n\n    /**\n     * #####################################\n     * Action\n     * #####################################\n     */\n\n    /**\n     * Rotation\n     * ---------------------\n     */\n\n    canRotate(tmpRotateID) {\n        if (tmpRotateID === -1)\n            tmpRotateID = 3;\n        else if (tmpRotateID === 4)\n            tmpRotateID = 0;\n\n        let tmpGrid = this.shape.grids[tmpRotateID];\n        for (let row = 0; row < tmpGrid.length; row++) {\n            for (let column = 0; column < tmpGrid[0].length; column++) {\n                if (tmpGrid[row][column] === \"x\") {\n                    let y = this.row + row;\n                    let x = this.column + column;\n\n                    if (x < 0 || x > CONSTANT.gameBoard.NUM_COLS - 1) {\n                        console.log(\"Cannot rotate > invalid x: \" + x);\n                        //console.table(tmpGrid);\n                        return false;\n                    }\n\n\n                    if (y > CONSTANT.gameBoard.NUM_ROWS - 1) {\n                        console.log(\"Cannot rotate > invalid y: \" + y);\n                        //console.table(tmpGrid);\n                        return false;\n                    }\n\n                    if (!this.board.isEmpty(y, x)) {\n                        console.log(\"Cannot rotate > occupied x: \" + x + \" y: \" + y);\n                        //console.table(tmpGrid);\n                        return false;\n                    }\n                }\n            }\n        }\n\n        return true;\n    }\n\n    changeUp() {\n        if (this.canRotate(this.rotationIndex - 1)) {\n            this.scene.sound.play(\"sound-move\");\n            this.rotationIndex--;\n            if (this.rotationIndex === -1)\n                this.rotationIndex = 3;\n\n            this.draw();\n        }\n    }\n\n    changeDown() {\n        if (this.canRotate(this.rotationIndex + 1)) {\n            this.scene.sound.play(\"sound-move\");\n            this.rotationIndex++;\n            if (this.rotationIndex === 4)\n                this.rotationIndex = 0;\n\n            this.draw();\n        }\n    }\n\n    /**\n     * Left\n     * ---------------------\n     */\n    canMoveLeft() {\n        let flag = true;\n        for (let i = 0; i < this.dotArray.length; i++) {\n            if (!this.dotArray[i].canMoveLeft()) {\n                flag = false;\n                break;\n            }\n        }\n        return flag;\n    }\n\n    moveLeft() {\n        if (this.canMoveLeft()) {\n            this.scene.sound.play(\"sound-move\");\n            for (let i = 0; i < this.dotArray.length; i++) {\n                this.dotArray[i].moveLeft();\n            }\n            this.column--;\n        }\n    }\n\n    /**\n     * Right\n     * ---------------------\n     */\n    canMoveRight() {\n        let flag = true;\n        for (let i = 0; i < this.dotArray.length; i++) {\n            if (!this.dotArray[i].canMoveRight()) {\n                flag = false;\n                break;\n            }\n        }\n        return flag;\n    }\n\n    moveRight() {\n        if (this.canMoveRight()) {\n            this.scene.sound.play(\"sound-move\");\n            for (let i = 0; i < this.dotArray.length; i++) {\n                this.dotArray[i].moveRight();\n            }\n            this.column++;\n        }\n    }\n\n    /**\n     * Fall\n     * ---------------------\n     */\n    canFall() {\n        let flag = true;\n        for (let i = 0; i < this.dotArray.length; i++) {\n            if (!this.dotArray[i].canFall()) {\n                flag = false;\n                break;\n            }\n        }\n        return flag;\n    }\n\n    fall() {\n        if (this.canFall()) {\n            for (let i = 0; i < this.dotArray.length; i++) {\n                this.dotArray[i].fall();\n            }\n            this.row++;\n            if(this.scene.keyDown.isDown) {\n                this.scene.sound.play('sound-swap');\n                this.scene.gameData.sPoint++;\n            }\n            return true;\n        }\n        return false;\n    }\n\n    goDown() {\n        let cnt = 0;\n        while (this.canFall()) {\n            this.fall();\n            cnt++;\n        }\n        this.scene.gameData.sPoint += CONSTANT.gameBoard.SCORE_PER_GO_DOWN * cnt;\n    }\n}","import {CONSTANT} from \"../data/CONSTANT\";\n\nexport class Dot extends Phaser.GameObjects.Graphics {\n\n    constructor(scene, options, row, column, board, color) {\n        super(scene, options);\n        this.board = board;\n        this.color = color;\n        this.setCoordinate(row, column);\n        this.draw();\n    }\n\n    setCoordinate(row, column) {\n        this.row = row;\n        this.column = column;\n        this.draw();\n    }\n\n    showData() {\n        console.log(\"row: \" + this.row + \" col: \" + this.column);\n    }\n\n    toPositionX(column) {\n        return (column + CONSTANT.gameBoard.OFFSET_COL) * CONSTANT.gameBoard.CELL_SIZE;\n    }\n\n    toPositionY(row) {\n        return (row + CONSTANT.gameBoard.OFFSET_ROW) * CONSTANT.gameBoard.CELL_SIZE;\n    }\n\n    draw() {\n        this.clear();\n        let x = this.toPositionX(this.column);\n        let y = this.toPositionY(this.row);\n        let rect = new Phaser.Geom.Rectangle(x, y, CONSTANT.gameBoard.CELL_SIZE, CONSTANT.gameBoard.CELL_SIZE);\n        this.fillStyle(this.color);\n        this.fillRectShape(rect);\n        this.scene.add.existing(this);\n    }\n\n    /**\n     * #####################################\n     * Action\n     * #####################################\n     */\n\n    /**\n     * Left\n     * ---------------------\n     */\n    didHitLeft() {\n        return this.column === 0;\n    }\n\n    canMoveLeft() {\n        if (this.didHitLeft())\n            return false;\n\n        return this.board.isEmpty(this.row, this.column - 1);\n    }\n\n    moveLeft() {\n        this.column--;\n        this.draw();\n    }\n\n    /**\n     * Right\n     * ---------------------\n     */\n    didHitRight() {\n        return this.column === CONSTANT.gameBoard.NUM_COLS - 1;\n    }\n\n    canMoveRight() {\n        if (this.didHitRight())\n            return false;\n\n        return this.board.isEmpty(this.row, this.column + 1);\n    }\n\n    moveRight() {\n        this.column++;\n        this.draw();\n    }\n\n    /**\n     * Fall\n     * ---------------------\n     */\n    didHitBottom() {\n        return this.row === CONSTANT.gameBoard.NUM_ROWS - 1;\n    }\n\n    canFall() {\n        if (this.didHitBottom())\n            return false;\n\n        return this.board.isEmpty(this.row + 1, this.column);\n    }\n\n    fall() {\n        this.row++;\n        this.draw();\n    }\n}","import {CONSTANT} from \"../data/CONSTANT\";\n\nexport class GridBoard extends Phaser.GameObjects.Graphics {\n\n    constructor(scene, options) {\n        super(scene, options);\n        this.setDefaultStyles({\n            lineStyle: {\n                width: 1,\n                color: 0xffffff,\n                alpha: 0.2\n            },\n            fillStyle: {\n                color: 0x6C6C6C,\n                alpha: 1\n            }\n        });\n        this.boardData = CONSTANT.gameBoard.BOARD_DATA;\n        this.draw();\n    }\n\n    toPositionX(column) {\n        return (column + CONSTANT.gameBoard.OFFSET_COL) * CONSTANT.gameBoard.CELL_SIZE;\n    }\n\n    toPositionY(row) {\n        return (row + CONSTANT.gameBoard.OFFSET_ROW) * CONSTANT.gameBoard.CELL_SIZE;\n    }\n\n    draw() {\n        this.clear();\n        for (let row = 0; row < this.boardData.length; row++) {\n            for (let column = 0; column < this.boardData[0].length; column++) {\n                let x = this.toPositionX(column);\n                let y = this.toPositionY(row);\n                let rect = new Phaser.Geom.Rectangle(x, y, CONSTANT.gameBoard.CELL_SIZE, CONSTANT.gameBoard.CELL_SIZE);\n                this.depth = 10;\n                if(x < 20) {\n                    this.fillStyle(0x6C6C6C);\n                    this.fillRectShape(rect);\n                    console.log(x);\n                } else {\n                    this.strokeRectShape(rect);\n                }\n            }\n        }\n    }\n}","import {CONSTANT} from \"../data/CONSTANT\";\nimport {Dot} from \"./Dot\";\n\nexport class NextBrick extends Phaser.GameObjects.Graphics {\n\n    constructor(scene, options, board, shapeIndex) {\n        super(scene, options);\n        this.board = board;\n        this.dotArray = [];\n        this.rotationIndex = 0;\n        this.row = 0;\n        this.column = 0;\n        this.setDefaultStyles({\n            lineStyle: {\n                width: 1,\n                color: 0xffffff,\n                alpha: 0.3\n            },\n            fillStyle: {\n                color: 0xcccccc,\n                alpha: 1\n            }\n        });\n\n        this.shapeIndex = shapeIndex;\n        this.shape = CONSTANT.gameBoard.BRICK_SHAPES[this.shapeIndex];\n    }\n\n    getColor() {\n        switch (this.shapeIndex) {\n            case 0:\n                return 0xCF3616;\n            case 1:\n                return 0xBDC007;\n            case 2:\n                return 0x169907;\n            case 3:\n                return 0x07996F;\n            case 4:\n                return 0x076F99;\n            case 5:\n                return 0x410799;\n            case 6:\n                return 0x99078A;\n        }\n    }\n\n    setCoordinate(row) {\n        this.row = row;\n        this.column = CONSTANT.gameBoard.OFFSET_NEXT_COL;\n        this.draw();\n    }\n\n    clearSet() {\n        while (this.dotArray.length !== 0) {\n            let d = this.dotArray.pop();\n            d.clear();\n        }\n    }\n\n    draw() {\n        this.clearSet();\n        this.grid = this.shape.grids[this.rotationIndex];\n        for (let row = 0; row < this.grid.length; row++) {\n            for (let column = 0; column < this.grid[0].length; column++) {\n                if (this.grid[row][column] === \"x\") {\n                    let x = this.row + row;\n                    let y = this.column + column;\n                    this.dotArray.push(new Dot(this.scene, {}, x, y, this.board, this.getColor()));\n                }\n            }\n        }\n    }\n\n    /**\n     * #####################################\n     * Action\n     * #####################################\n     */\n\n}","export const CONSTANT = {\n    gameBoard: {\n        NUM_ROWS: 24,\n        NUM_COLS: 10,\n        CELL_SIZE: 20,\n        OFFSET_COL: 20,\n        OFFSET_ROW: 3,\n        OFFSET_NEXT_COL: 13,\n        OFFSET_NEXT_ROW_1: 3,\n        OFFSET_NEXT_ROW_2: 10,\n        OFFSET_MIDDLE: 3,\n        SCORE_PER_ROW: 50,\n        SCORE_PER_GO_DOWN: 5,\n        BOARD_DATA: [\n            [null, null, null, null, null, null, null, null, null, null],\n            [null, null, null, null, null, null, null, null, null, null],\n            [null, null, null, null, null, null, null, null, null, null],\n            [null, null, null, null, null, null, null, null, null, null],\n            [null, null, null, null, null, null, null, null, null, null],\n            [null, null, null, null, null, null, null, null, null, null],\n            [null, null, null, null, null, null, null, null, null, null],\n            [null, null, null, null, null, null, null, null, null, null],\n            [null, null, null, null, null, null, null, null, null, null],\n            [null, null, null, null, null, null, null, null, null, null],\n            [null, null, null, null, null, null, null, null, null, null],\n            [null, null, null, null, null, null, null, null, null, null],\n            [null, null, null, null, null, null, null, null, null, null],\n            [null, null, null, null, null, null, null, null, null, null],\n            [null, null, null, null, null, null, null, null, null, null],\n            [null, null, null, null, null, null, null, null, null, null],\n            [null, null, null, null, null, null, null, null, null, null],\n            [null, null, null, null, null, null, null, null, null, null],\n            [null, null, null, null, null, null, null, null, null, null],\n            [null, null, null, null, null, null, null, null, null, null],\n            [null, null, null, null, null, null, null, null, null, null],\n            [null, null, null, null, null, null, null, null, null, null],\n            [null, null, null, null, null, null, null, null, null, null],\n            [null, null, null, null, null, null, null, null, null, null]\n        ],\n        BRICK_SHAPES: [\n            {\n                name: \"shape_i\",\n                grids: [\n                    [\n                        [null, null, null, null],\n                        [\"x\", \"x\", \"x\", \"x\"],\n                        [null, null, null, null],\n                        [null, null, null, null]\n                    ],\n                    [\n                        [null, null, \"x\", null],\n                        [null, null, \"x\", null],\n                        [null, null, \"x\", null],\n                        [null, null, \"x\", null]\n                    ],\n                    [\n                        [null, null, null, null],\n                        [null, null, null, null],\n                        [\"x\", \"x\", \"x\", \"x\"],\n                        [null, null, null, null]\n                    ],\n                    [\n                        [null, \"x\", null, null],\n                        [null, \"x\", null, null],\n                        [null, \"x\", null, null],\n                        [null, \"x\", null, null]\n                    ],\n                ]\n            },\n            {\n                name: \"shape_l1\",\n                grids: [\n                    [\n                        [\"x\", null, null],\n                        [\"x\", \"x\", \"x\"],\n                        [null, null, null]\n                    ],\n                    [\n                        [null, \"x\", \"x\"],\n                        [null, \"x\", null],\n                        [null, \"x\", null]\n                    ],\n                    [\n                        [null, null, null],\n                        [\"x\", \"x\", \"x\"],\n                        [null, null, \"x\"]\n                    ],\n                    [\n                        [null, \"x\", null],\n                        [null, \"x\", null],\n                        [\"x\", \"x\", null]\n                    ],\n                ]\n            },\n            {\n                name: \"shape_l2\",\n                grids: [\n                    [\n                        [null, null, \"x\"],\n                        [\"x\", \"x\", \"x\"],\n                        [null, null, null]\n                    ],\n                    [\n                        [null, \"x\", null],\n                        [null, \"x\", null],\n                        [null, \"x\", \"x\"]\n                    ],\n                    [\n                        [null, null, null],\n                        [\"x\", \"x\", \"x\"],\n                        [\"x\", null, null]\n                    ],\n                    [\n                        [\"x\", \"x\", null],\n                        [null, \"x\", null],\n                        [null, \"x\", null]\n                    ],\n                ]\n            },\n            {\n                name: \"shape_z1\",\n                grids: [\n                    [\n                        [null, \"x\", \"x\"],\n                        [\"x\", \"x\", null],\n                        [null, null, null]\n                    ],\n                    [\n                        [null, \"x\", null],\n                        [null, \"x\", \"x\"],\n                        [null, null, \"x\"]\n                    ],\n                    [\n                        [null, null, null],\n                        [null, \"x\", \"x\"],\n                        [\"x\", \"x\", null]\n                    ],\n                    [\n                        [\"x\", null, null],\n                        [\"x\", \"x\", null],\n                        [null, \"x\", null]\n                    ],\n                ]\n            },\n            {\n                name: \"shape_z2\",\n                grids: [\n                    [\n                        [\"x\", \"x\", null],\n                        [null, \"x\", \"x\"],\n                        [null, null, null]\n                    ],\n                    [\n                        [null, null, \"x\"],\n                        [null, \"x\", \"x\"],\n                        [null, \"x\", null]\n                    ],\n                    [\n                        [null, null, null],\n                        [\"x\", \"x\", null],\n                        [null, \"x\", \"x\"]\n                    ],\n                    [\n                        [null, \"x\", null],\n                        [\"x\", \"x\", null],\n                        [\"x\", null, null]\n                    ],\n                ]\n            },\n            {\n                name: \"shape_o\",\n                grids: [\n                    [\n                        [null, \"x\", \"x\", null],\n                        [null, \"x\", \"x\", null],\n                        [null, null, null, null]\n                    ],\n                    [\n                        [null, \"x\", \"x\", null],\n                        [null, \"x\", \"x\", null],\n                        [null, null, null, null]\n                    ],\n                    [\n                        [null, \"x\", \"x\", null],\n                        [null, \"x\", \"x\", null],\n                        [null, null, null, null]\n                    ],\n                    [\n                        [null, \"x\", \"x\", null],\n                        [null, \"x\", \"x\", null],\n                        [null, null, null, null]\n                    ],\n                ]\n            },\n            {\n                name: \"shape_t\",\n                grids: [\n                    [\n                        [null, \"x\", null],\n                        [\"x\", \"x\", \"x\"],\n                        [null, null, null]\n                    ],\n                    [\n                        [null, \"x\", null],\n                        [null, \"x\", \"x\"],\n                        [null, \"x\", null]\n                    ],\n                    [\n                        [null, null, null],\n                        [\"x\", \"x\", \"x\"],\n                        [null, \"x\", null]\n                    ],\n                    [\n                        [null, \"x\", null],\n                        [\"x\", \"x\", null],\n                        [null, \"x\", null]\n                    ],\n                ]\n            }\n        ]\n    }\n};","export default Object.freeze({\n  \n  colors: Object.freeze({\n    aqua: '#62f6ff',\n    black: '#000',\n    gold: '#fed141',\n    white: '#fff'\n  }),\n  \n  fonts: Object.freeze({\n    default: 'Futura, system-ui, sans-serif'\n  }),\n  \n  hexColors: Object.freeze({\n    darkGray: 0x222222,\n    red: 0xff2200,\n    white: 0xffffff\n  })\n  \n});\n","import BootScene from 'scenes/boot';\nimport DefaultScene from 'scenes/default';\nimport MenuScene from 'scenes/menu';\n\nwindow.game = new Phaser.Game({\n  // See <https://github.com/photonstorm/phaser/blob/master/src/boot/Config.js>\n  width: 1000,\n  height: 600,\n  // zoom: 1,\n  // resolution: 1,\n  type: Phaser.AUTO,\n  // parent: null,\n  // canvas: null,\n  // canvasStyle: null,\n  // seed: null,\n  title: '☕️ Brunch with Phaser and ES6', // 'My Phaser 3 Game'\n  url: 'https://github.com/samme/brunch-phaser-es6',\n  version: '0.0.1',\n  // input: {\n  //   keyboard: true,\n  //   mouse: true,\n  //   touch: true,\n  //   gamepad: false\n  // },\n  // disableContextMenu: false,\n  // banner: false\n  banner: {\n    // hidePhaser: false,\n    // text: 'white',\n    background: ['#e54661', '#ffa644', '#998a2f', '#2c594f', '#002d40']\n  },\n  // fps: {\n  //   min: 10,\n  //   target: 60,\n  //   forceSetTimeout: false,\n  // },\n  // antialias: false,\n  // pixelArt: false,\n  // transparent: false,\n  // clearBeforeRender: true,\n  // backgroundColor: 0x000000, // black\n  loader: {\n    // baseURL: '',\n    path: 'assets/',\n    // maxParallelDownloads: 32,\n    // crossOrigin: 'anonymous',\n    // timeout: 0\n  },\n  physics: {\n    default: 'arcade',\n    arcade: {\n      gravity: {\n        y: 180\n      }\n    }\n  },\n  scene: [\n    BootScene,\n    DefaultScene,\n    MenuScene\n  ],\n\n});\n","import CONST from 'data/const';\n\nconst Rectangle = Phaser.Geom.Rectangle;\n\nexport default class BootScene extends Phaser.Scene {\n\n  constructor () {\n    super('boot');\n    this.progressBar = null;\n    this.progressBgRect = null;\n    this.progressRect = null;\n  }\n\n  preload () {\n    this.load.image('bg', 'bg.png');\n    this.load.image('bg2', 'bg2.png');\n    this.load.image('title', 'title.png');\n    this.load.image('bg-dim-1', 'bg-dim-1.png');\n    this.load.image(\"cell\", \"cell.png\");\n\n    this.load.spritesheet('btn-newGame',\n        'btn-newGame.png',\n        { frameWidth: 121, frameHeight: 26 }\n    );\n\n    this.load.spritesheet('btn-highScore',\n        'btn-highScore.png',\n        { frameWidth: 121, frameHeight: 26 }\n    );\n\n    this.load.spritesheet('btn-about',\n        'btn-about.png',\n        { frameWidth: 121, frameHeight: 26 }\n    );\n\n    this.load.audio('sound-swap', 'sound-swap.wav');\n    this.load.audio('sound-click', 'sound-click.wav');\n    this.load.audio('sound-fallFast', 'sound-fallFast.wav');\n    this.load.audio('sound-done', 'sound-done.wav');\n    this.load.audio('sound-drop', 'sound-drop.wav');\n    this.load.audio('sound-move', 'sound-move.wav');\n    this.load.audio('sound-bgMusic', 'sound-bgMusic.mp3');\n\n    this.load.on('progress', this.onLoadProgress, this);\n    this.load.on('complete', this.onLoadComplete, this);\n    this.createProgressBar();\n  }\n\n  create () {\n    this.registry.set('score', 0);\n    this.scene.start('menu');\n  }\n\n  // extend:\n\n  createProgressBar () {\n    const main = this.cameras.main;\n    this.progressBgRect = new Rectangle(0, 0, 0.5 * main.width, 50);\n    Rectangle.CenterOn(this.progressBgRect, 0.5 * main.width, 0.5 * main.height);\n    this.progressRect = Rectangle.Clone(this.progressBgRect);\n    this.progressBar = this.add.graphics();\n  }\n\n  onLoadComplete (loader, totalComplete, totalFailed) {\n    console.debug('complete', totalComplete);\n    console.debug('failed', totalFailed);\n    this.progressBar.destroy();\n  }\n\n  onLoadProgress (progress) {\n    console.debug('progress', progress);\n    this.progressRect.width = progress * this.progressBgRect.width;\n    this.progressBar\n      .clear()\n      .fillStyle(CONST.hexColors.darkGray)\n      .fillRectShape(this.progressBgRect)\n      .fillStyle(this.load.totalFailed ? CONST.hexColors.red : CONST.hexColors.white)\n      .fillRectShape(this.progressRect);\n  }\n\n}\n","import {Board} from \"../classes/Board\";\nimport {Brick} from \"../classes/Brick\";\nimport {GridBoard} from \"../classes/GridBoard\";\nimport {CONSTANT} from \"../data/CONSTANT\";\nimport {NextBrick} from \"../classes/NextBrick\";\n\nexport default class DefaultScene extends Phaser.Scene {\n\n    constructor() {\n        super('default');\n    }\n\n    init(data) {\n        console.debug('init', this.scene.key, data, this);\n        this.events.on('shutdown', this.shutdown, this);\n    }\n\n    create() {\n        const picBg = this.add.image(500, 300, 'bg2');\n\n        this.fallTimer = this.time.addEvent({\n            delay: 1000,\n            callback: this.fall,\n            callbackScope: this,\n            loop: true\n        });\n        this.board = new Board(this, {});\n        this.gridBoard = new GridBoard(this, {});\n        this.add.existing(this.board);\n        this.add.existing(this.gridBoard);\n\n        this.brickQueue = [];\n        this.brickQueueObj = [];\n        this.addBrickIDsToQueue();\n        this.brick = new Brick(this, {}, this.board, this.getBrickIDFromQueue());\n\n        this.bgMusic = this.sound.add('sound-bgMusic');\n        this.bgMusic.play({\n            volume: 0.5,\n            loop: true\n        })\n\n        this.gameData = {\n            sPoint: 0,\n            score: 0,\n            level: 1,\n            destroyed: 0,\n            player: \"\",\n            time: null,\n            nexShapeIndices: [],\n            nextSpecialIndices: []\n        };\n\n        let styleConfig = {\n            font: \"20px 'Verdana'\", fill: \"#ff0000\", align: \"center\"\n        };\n        this.data_score = this.add.text(640, 320, \"0\", styleConfig);\n        this.data_sPoint = this.add.text(240, 320, \"0\", styleConfig);\n        this.data_time = this.add.text(640, 400, \"0\", styleConfig);\n        this.data_level = this.add.text(240, 400, \"0\", styleConfig);\n        this.data_player = this.add.text(640, 480, \"0\", styleConfig);\n        this.data_destroyed = this.add.text(240, 480, \"0\", styleConfig);\n\n\n        this.keyLeft = this.input.keyboard.addKey('LEFT');\n        this.keyLeft.on('down', () => this.brick.moveLeft());\n\n        this.keyRight = this.input.keyboard.addKey('RIGHT');\n        this.keyRight.on('down', () => this.brick.moveRight());\n\n        this.keyA = this.input.keyboard.addKey('A');\n        this.keyA.on('down', () => this.brick.changeUp());\n\n        this.keyUP = this.input.keyboard.addKey('UP');\n        this.keyUP.on('down', () => this.brick.changeUp());\n\n        this.keyD = this.input.keyboard.addKey('D');\n        this.keyD.on('down', () => this.brick.changeDown());\n\n        this.keySPACE = this.input.keyboard.addKey('SPACE');\n        this.keySPACE.on('down', () => {\n            this.sound.play('sound-drop');\n            this.brick.goDown();\n        });\n\n        this.keyDown = this.input.keyboard.addKey('DOWN');\n\n        this.input.keyboard.once('keydown_Q', this.quit, this);\n    }\n\n    addNextBricksToQueue() {\n        for (let i = 0; i < this.brickQueue; i++) {\n            let row = 3;\n            if (i === 1)\n                row = 10;\n        }\n    }\n\n    addBrickIDsToQueue() {\n        let cnt = 2 - this.brickQueue.length;\n        for (let i = 0; i < cnt; i++) {\n            let tmpShapeIndex = Math.floor(Math.random() * CONSTANT.gameBoard.BRICK_SHAPES.length);\n            this.brickQueue.push(tmpShapeIndex);\n            this.brickQueueObj.push(new NextBrick(this, {}, this.board, tmpShapeIndex));\n        }\n        this.brickQueueObj[0].setCoordinate(2);\n        this.brickQueueObj[1].setCoordinate(6);\n    }\n\n    getBrickIDFromQueue() {\n        let tmp = this.brickQueue.shift();\n        let tmpObj = this.brickQueueObj.shift();\n        tmpObj.clearSet();\n        tmpObj.destroy();\n        this.addBrickIDsToQueue();\n        return tmp;\n    }\n\n    updateData() {\n        if(!this.brick.canFall() && !this.brick.playedSound) {\n            this.sound.play('sound-click');\n            this.brick.playedSound = true;\n        }\n        this.data_score.text = this.gameData.score;\n        this.data_sPoint.text = this.gameData.sPoint;\n        this.data_time.text = \"00:00:00\";\n        this.data_level.text = this.gameData.level;\n        this.data_player.text = \"Trung Tran\";\n        this.data_destroyed.text = this.gameData.destroyed;\n    }\n\n    update() {\n        if (this.keyDown.isDown) {\n            this.brick.fall();\n        }\n        this.updateData();\n    }\n\n    getRandWithProb(setWithProb) {\n        let sum = 0;\n        for (let i = 0; i < setWithProb.length; i++) {\n            sum += setWithProb[i];\n        }\n\n        let pick = Math.random() * sum;\n        for (let i = 0; i < setWithProb.length; i++) {\n            pick -= setWithProb[i];\n            if (pick <= 0) {\n                return i;\n            }\n        }\n    }\n\n    // extend:\n\n    quit() {\n        // this.removeBrick();\n        // this.fallTimer.destroy();\n        this.scene.start('menu');\n    }\n\n    removeBrick() {\n        this.brick.clearSet();\n        this.brick = null;\n    }\n\n    createBrick() {\n        this.brick = new Brick(this, {}, this.board, this.getBrickIDFromQueue());\n    }\n\n    fall() {\n        if (!this.brick.fall()) {\n            this.board.fix(this.brick);\n            this.brick.clearSet();\n            this.brick.destroy();\n            let completedRowsCnt = this.board.checkToClear();\n            if(completedRowsCnt !== 0) {\n                this.sound.play('sound-done');\n            }\n            this.updateScore(completedRowsCnt);\n            this.board.draw();\n            this.createBrick();\n        }\n    }\n\n    updateScore(completedRowsCnt) {\n        switch (completedRowsCnt) {\n            case 1:\n                this.gameData.score += Math.floor(1 * completedRowsCnt * CONSTANT.gameBoard.SCORE_PER_ROW);\n                break;\n            case 2:\n                this.gameData.score += Math.floor(2 * completedRowsCnt * CONSTANT.gameBoard.SCORE_PER_ROW);\n                break;\n            case 3:\n                this.gameData.score += Math.floor(3 * completedRowsCnt * CONSTANT.gameBoard.SCORE_PER_ROW);\n                break;\n            case 4:\n                this.gameData.score += Math.floor(4 * completedRowsCnt * CONSTANT.gameBoard.SCORE_PER_ROW);\n                break;\n        }\n        this.gameData.destroyed += completedRowsCnt;\n    }\n\n    shutdown() {\n        this.registry.set('score', this.score);\n    }\n\n}\n","export default class MenuScene extends Phaser.Scene {\n\n    constructor() {\n        super('menu');\n    }\n\n    init(data) {\n        console.debug('init', this.scene.key, data, this);\n    }\n\n    create() {\n        let player = this.sound;\n        let scene = this.scene;\n        let selectedMenu = 1;\n\n        const picBg = this.add.image(500, 300, 'bg');\n\n        const picTitle = this.add.image(0, 0, 'title');\n        picTitle.setOrigin(0, 0);\n        picTitle.setPosition((game.renderer.width - picTitle.width) / 2, 100);\n\n        const picBgDim = this.add.image(0, 0, 'bg-dim-1');\n        picBgDim.setOrigin(0, 0);\n        picBgDim.setPosition((game.renderer.width - picBgDim.width) / 2, 270);\n\n        const btnNewGame = this.add.sprite(0, 0, 'btn-newGame').setInteractive();\n        btnNewGame.setOrigin(0,0);\n        btnNewGame.setPosition((game.renderer.width - btnNewGame.width) / 2 - 10, 305);\n        btnNewGame.setFrame(1);\n        // btnNewGame.on('pointerover', function(pointer) {\n        //     player.play('sound-swap');\n        //     btnNewGame.setFrame(1);\n        // });\n        // btnNewGame.on('pointerout', function(pointer) {\n        //     btnNewGame.setFrame(0);\n        // });\n        btnNewGame.setScale(1.3);\n\n        const btnHighScore = this.add.sprite(0, 0, 'btn-highScore').setInteractive();\n        btnHighScore.setOrigin(0,0);\n        btnHighScore.setPosition((game.renderer.width - btnHighScore.width) / 2 - 12, 355);\n        // btnHighScore.on('pointerover', function(pointer) {\n        //     player.play('sound-swap');\n        //     btnHighScore.setFrame(1);\n        // });\n        // btnHighScore.on('pointerout', function(pointer) {\n        //     btnHighScore.setFrame(0);\n        // });\n        btnHighScore.setScale(1.3);\n\n        const btnAbout = this.add.sprite(0, 0, 'btn-about').setInteractive();\n        btnAbout.setOrigin(0,0);\n        btnAbout.setPosition((game.renderer.width - btnAbout.width) / 2 - 12, 405);\n        // btnAbout.on('pointerover', function(pointer) {\n        //     player.play('sound-swap');\n        //     btnAbout.setFrame(1);\n        // });\n        // btnAbout.on('pointerout', function(pointer) {\n        //     btnAbout.setFrame(0);\n        // });\n        btnAbout.setScale(1.3);\n\n        //this.input.on('pointerup', this.start, this);\n        btnNewGame.on('pointerup', function(pointer) {\n            player.play('sound-click');\n        });\n\n        btnHighScore.on('pointerup', function(pointer) {\n            player.play('sound-click');\n        });\n\n        btnAbout.on('pointerup', function(pointer) {\n            player.play('sound-click');\n        });\n\n\n        let keyUp = this.input.keyboard.addKey('UP');\n        keyUp.on('down', function(event) {\n            selectedMenu--;\n            if(selectedMenu === 0)\n                selectedMenu = 3;\n            highLightBtn();\n        });\n\n        let keyDown = this.input.keyboard.addKey('DOWN');\n        keyDown.on('down', function(event) {\n            selectedMenu++;\n            if(selectedMenu === 4)\n                selectedMenu = 1;\n            highLightBtn();\n        });\n\n        function highLightBtn() {\n            player.play('sound-swap');\n            switch(selectedMenu) {\n                case 1:\n                    btnNewGame.setFrame(1);\n                    btnHighScore.setFrame(0);\n                    btnAbout.setFrame(0);\n                    break;\n                case 2:\n                    btnNewGame.setFrame(0);\n                    btnHighScore.setFrame(1);\n                    btnAbout.setFrame(0);\n                    break;\n                case 3:\n                    btnNewGame.setFrame(0);\n                    btnHighScore.setFrame(0);\n                    btnAbout.setFrame(1);\n                    break;\n            }\n        }\n\n        let keyEnter = this.input.keyboard.addKey('ENTER');\n        keyEnter.on('down', function (event) {\n            switch(selectedMenu) {\n                case 1:\n                    scene.start('default');\n                    break;\n                case 2:\n                    scene.start('highScore');\n                    break;\n                case 3:\n                    scene.start('about');\n                    break;\n            }\n        });\n    }\n\n}\n"]}